{
  "openapi": "3.0.0",
  "info": {
    "title": "Humanitix Public API",
    "description": "The Humanitix Public API for fetching event, order, ticket or tag information. Please note that in periods of low activity the first request you make may take a few seconds longer than normal.",
    "version": "1.18.0"
  },
  "servers": [
    {
      "url": "https://api.humanitix.com/",
      "description": "Production endpoint"
    }
  ],
  "security": [{ "ApiKeyAuth": [] }],
  "paths": {
    "/v1/events": {
      "get": {
        "summary": "Get Events",
        "description": "Returns an array of events.",
        "parameters": [
          { "$ref": "#/components/parameters/Page" },
          { "$ref": "#/components/parameters/PageSize" },
          { "$ref": "#/components/parameters/InFutureOnly" },
          { "$ref": "#/components/parameters/Since" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Events"],
        "responses": {
          "200": {
            "description": "An array of event objects",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "required": ["events"],
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Event" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Event",
        "x-internal": true,
        "description": "Create a base event. Requires special user permission to use this endpoint, activated by Humanitix.",
        "parameters": [{ "$ref": "#/components/parameters/OverrideLocation" }],
        "tags": ["Events"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateEventRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A single event object",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Event" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}": {
      "get": {
        "summary": "Get Event",
        "description": "Returns an event for the given eventId.",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Events"],
        "responses": {
          "200": {
            "description": "A single event object",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Event" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Event. Requires special user permission to use this endpoint, activated by Humanitix.",
        "description": "Update an event",
        "x-internal": true,
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Events"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateEventRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A single event object",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Event" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/check-in-count": {
      "get": {
        "summary": "Get Event check in count (BETA)",
        "description": "Returns a check in count object for a given eventId and eventDateId for all tickets that have had sales (this endpoint is in Beta and is subject to change).",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/EventDateIdRequired" }
        ],
        "tags": ["Events"],
        "responses": {
          "200": {
            "description": "Check in information for an eventDate. Total check ins and check ins by ticket type for tickets with sales (sorted by number of check ins, descending).",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CheckInCountResult" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/orders": {
      "get": {
        "summary": "Get Orders",
        "description": "Returns all orders for a given event and eventDateId.",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/EventDateId" },
          { "$ref": "#/components/parameters/Page" },
          { "$ref": "#/components/parameters/PageSize" },
          { "$ref": "#/components/parameters/Since" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Orders"],
        "responses": {
          "200": {
            "description": "An array of order objects.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "required": ["orders"],
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Order" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/orders/{orderId}": {
      "get": {
        "summary": "Get Order",
        "description": "Returns an order for the given eventId.",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/OrderId" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Orders"],
        "responses": {
          "200": {
            "description": "A single order object.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Order" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/tickets": {
      "get": {
        "summary": "Get Tickets",
        "description": "Returns all tickets for an event.",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/EventDateId" },
          { "$ref": "#/components/parameters/Page" },
          { "$ref": "#/components/parameters/PageSize" },
          { "$ref": "#/components/parameters/Status" },
          { "$ref": "#/components/parameters/Since" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Tickets"],
        "responses": {
          "200": {
            "description": "An array of ticket objects.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "required": ["tickets"],
                      "properties": {
                        "tickets": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Ticket" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/tickets/{ticketId}": {
      "get": {
        "summary": "Get Ticket",
        "description": "Returns a ticket for the given eventId and ticketId.",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/TicketId" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Tickets"],
        "responses": {
          "200": {
            "description": "A single ticket object.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Ticket" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/tickets/{ticketId}/transfer": {
      "post": {
        "summary": "Transfer Ticket",
        "description": "Transfers a ticket from one person to another. Requires special user permission to use this endpoint, activated by Humanitix.",
        "x-internal": true,
        "parameters": [
          { "$ref": "#/components/parameters/AccessApiKey" },
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/TicketId" }
        ],
        "tags": ["Tickets"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TransferTicketRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The modified ticket object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferTicketResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityError"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/tickets/{ticketId}/check-in": {
      "post": {
        "summary": "Check in",
        "description": "Update the ticket to check it in",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/TicketId" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Tickets"],
        "responses": {
          "200": {
            "description": "Any scanning messages for the ticket",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CheckInOutResult" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityError"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/events/{eventId}/tickets/{ticketId}/check-out": {
      "post": {
        "summary": "Check out",
        "description": "Update the ticket to check it out",
        "parameters": [
          { "$ref": "#/components/parameters/EventId" },
          { "$ref": "#/components/parameters/TicketId" },
          { "$ref": "#/components/parameters/OverrideLocation" }
        ],
        "tags": ["Tickets"],
        "responses": {
          "200": {
            "description": "Any scanning messages for the ticket",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CheckInOutResult" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityError"
                }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/tags": {
      "get": {
        "summary": "Get Tags",
        "description": "Returns all tags for a user.",
        "parameters": [
          { "$ref": "#/components/parameters/Page" },
          { "$ref": "#/components/parameters/PageSize" }
        ],
        "tags": ["Tags"],
        "responses": {
          "200": {
            "description": "An array of tag objects.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "required": ["tags"],
                      "properties": {
                        "tags": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Tag" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/tags/{tagId}": {
      "get": {
        "summary": "Get Tag",
        "description": "Returns a tag for the given tagId.",
        "parameters": [{ "$ref": "#/components/parameters/TagId" }],
        "tags": ["Tags"],
        "responses": {
          "200": {
            "description": "A single tag object.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Tag" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    },
    "/v1/global/events": {
      "get": {
        "summary": "Get Events global",
        "description": "Returns an array of events from across the platform. Requires special user permission to use this endpoint, activated by Humanitix.",
        "parameters": [
          { "$ref": "#/components/parameters/Page" },
          { "$ref": "#/components/parameters/PageSize" },
          { "$ref": "#/components/parameters/Type" },
          { "$ref": "#/components/parameters/Category" },
          { "$ref": "#/components/parameters/Subcategory" },
          { "$ref": "#/components/parameters/OverrideLocation" },
          { "$ref": "#/components/parameters/WithArtistsOnly" }
        ],
        "tags": ["Global"],
        "responses": {
          "200": {
            "description": "An array of event objects",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/PaginatedResponse" },
                    {
                      "type": "object",
                      "required": ["events"],
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": { "$ref": "#/components/schemas/Event" }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestError" }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnauthorizedError" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ForbiddenError" }
              }
            }
          },
          "default": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InternalServerError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "EventId": {
        "name": "eventId",
        "in": "path",
        "required": true,
        "description": "ID of the event.",
        "schema": { "$ref": "#/components/schemas/EventId" }
      },
      "OrderId": {
        "name": "orderId",
        "in": "path",
        "required": true,
        "description": "ID of the order.",
        "schema": { "$ref": "#/components/schemas/OrderId" }
      },
      "TicketId": {
        "name": "ticketId",
        "in": "path",
        "required": true,
        "description": "ID of the ticket.",
        "schema": { "$ref": "#/components/schemas/TicketId" }
      },
      "TagId": {
        "name": "tagId",
        "in": "path",
        "required": true,
        "description": "ID of the tag.",
        "schema": { "$ref": "#/components/schemas/TagId" }
      },
      "OverrideLocation": {
        "name": "overrideLocation",
        "in": "query",
        "required": false,
        "description": "By default, queries will be made with the user location. Use this parameter to override the user location for these requests. Format is that of ISO 3166-1 alpha-2 country codes.",
        "schema": { "type": "string", "minLength": 2, "maxLength": 2 }
      },
      "EventDateId": {
        "name": "eventDateId",
        "in": "query",
        "required": false,
        "description": "ID of the event on a specific date.",
        "schema": { "$ref": "#/components/schemas/EventDateId" }
      },
      "EventDateIdRequired": {
        "name": "eventDateId",
        "in": "query",
        "required": true,
        "description": "ID of the event on a specific date.",
        "schema": { "$ref": "#/components/schemas/EventDateId" }
      },
      "Page": {
        "name": "page",
        "in": "query",
        "required": true,
        "description": "Page number you wish to fetch.",
        "schema": { "$ref": "#/components/schemas/PaginationPage" }
      },
      "PageSize": {
        "name": "pageSize",
        "in": "query",
        "required": false,
        "description": "Page size of the results you wish to fetch.",
        "schema": { "$ref": "#/components/schemas/PaginationPageSize" }
      },
      "InFutureOnly": {
        "name": "inFutureOnly",
        "in": "query",
        "required": false,
        "description": "If true, return only events that have an endDate in the future.",
        "schema": { "type": "boolean" }
      },
      "WithArtistsOnly": {
        "name": "withArtistsOnly",
        "in": "query",
        "required": false,
        "description": "If true, return only events that have artists.",
        "schema": { "type": "boolean" }
      },
      "Since": {
        "name": "since",
        "in": "query",
        "required": false,
        "description": "Results since this date-time (ISO 8601).",
        "schema": { "$ref": "#/components/schemas/Date" }
      },
      "Type": {
        "name": "type",
        "in": "query",
        "required": false,
        "description": "Filter events where \"event.classification.type\" matches this field.",
        "schema": { "$ref": "#/components/schemas/Type" }
      },
      "Category": {
        "name": "category",
        "in": "query",
        "required": false,
        "description": "Filter events where \"event.classification.category\" matches this field.",
        "schema": { "$ref": "#/components/schemas/Category" }
      },
      "Subcategory": {
        "name": "subcategory",
        "in": "query",
        "required": false,
        "description": "Filter events where \"event.classification.subcategory\" matches this field. If this parameter is provided, then \"#/components/parameters/Category\" must also be provided.",
        "schema": { "$ref": "#/components/schemas/Subcategory" }
      },
      "Status": {
        "name": "status",
        "in": "query",
        "required": false,
        "description": "Ticket status you wish to fetch.",
        "schema": { "type": "string", "enum": ["complete", "cancelled"] }
      },
      "AccessApiKey": {
        "name": "x-access-api-key",
        "in": "header",
        "required": true,
        "description": "The API key of the user who has permission to perform the requested action.",
        "schema": { "type": "string" }
      }
    },
    "schemas": {
      "Event": {
        "type": "object",
        "required": [
          "_id",
          "userId",
          "currency",
          "name",
          "description",
          "slug",
          "public",
          "published",
          "timezone",
          "totalCapacity",
          "location",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": { "$ref": "#/components/schemas/EventId" },
          "userId": { "$ref": "#/components/schemas/UserId" },
          "organiserId": { "$ref": "#/components/schemas/OrganiserId" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "name": { "type": "string", "example": "Hobbit Dance Off" },
          "description": {
            "type": "string",
            "example": "Where hobbits from all across the shire come to show off their movies!"
          },
          "slug": { "type": "string", "example": "hobbit-dance-off" },
          "url": {
            "type": "string",
            "example": "https://events.humanitix.com/hobbit-dance-off"
          },
          "tagIds": { "type": "array", "items": { "type": "string" } },
          "category": { "type": "string", "example": "community" },
          "classification": {
            "$ref": "#/components/schemas/EventClassification"
          },
          "artists": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Artist" }
          },
          "public": { "type": "boolean" },
          "published": { "type": "boolean" },
          "suspendSales": { "type": "boolean" },
          "markedAsSoldOut": { "type": "boolean" },
          "startDate": { "$ref": "#/components/schemas/Date" },
          "endDate": { "$ref": "#/components/schemas/Date" },
          "timezone": { "$ref": "#/components/schemas/Timezone" },
          "totalCapacity": { "type": "number", "example": 1000 },
          "ticketTypes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TicketType" }
          },
          "pricing": { "$ref": "#/components/schemas/Pricing" },
          "paymentOptions": { "$ref": "#/components/schemas/PaymentOptions" },
          "publishedAt": { "$ref": "#/components/schemas/Date" },
          "additionalQuestions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdditionalQuestions" }
          },
          "bannerImage": { "$ref": "#/components/schemas/Image" },
          "featureImage": { "$ref": "#/components/schemas/Image" },
          "socialImage": { "$ref": "#/components/schemas/Image" },
          "eventLocation": { "$ref": "#/components/schemas/EventLocation" },
          "dates": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DateRange" }
          },
          "packagedTickets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PackagedTickets" }
          },
          "accessibility": { "$ref": "#/components/schemas/Accessibility" },
          "affiliateCode": {
            "type": "object",
            "required": ["code"],
            "properties": { "code": { "type": "string" } }
          },
          "keywords": {
            "type": "array",
            "items": { "type": "string", "example": "sydney" }
          },
          "location": { "$ref": "#/components/schemas/Location" },
          "createdAt": { "$ref": "#/components/schemas/Date" },
          "updatedAt": { "$ref": "#/components/schemas/Date" }
        }
      },
      "Order": {
        "type": "object",
        "required": [
          "_id",
          "currency",
          "status",
          "financialStatus",
          "manualOrder",
          "salesChannel",
          "location",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": { "$ref": "#/components/schemas/OrderId" },
          "eventId": { "$ref": "#/components/schemas/EventId" },
          "userId": { "$ref": "#/components/schemas/UserId" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "eventDateId": { "$ref": "#/components/schemas/EventDateId" },
          "status": { "type": "string", "enum": ["complete"] },
          "financialStatus": {
            "type": "string",
            "enum": ["free", "paid", "partiallyRefunded", "refunded"]
          },
          "firstName": { "$ref": "#/components/schemas/FirstName" },
          "lastName": { "$ref": "#/components/schemas/LastName" },
          "organisation": { "type": "string", "example": "ABC School" },
          "mobile": { "$ref": "#/components/schemas/Mobile" },
          "email": { "$ref": "#/components/schemas/Email" },
          "accessCode": { "$ref": "#/components/schemas/AccessCode" },
          "discounts": { "$ref": "#/components/schemas/Discounts" },
          "businessPurpose": { "type": "boolean" },
          "businessTaxId": { "type": "string", "example": "12345678901" },
          "businessName": { "type": "string", "example": "ABC School" },
          "paymentType": {
            "type": "string",
            "enum": [
              "cash",
              "complimentary",
              "voucher",
              "bankDeposit",
              "eftpos",
              "payPal",
              "noPaymentNecessary",
              "other"
            ]
          },
          "paymentGateway": {
            "type": "string",
            "enum": [
              "manual",
              "gift-card",
              "credit",
              "discover-nsw",
              "invoice",
              "paypal",
              "bpoint",
              "afterpay",
              "zipmoney",
              "stripe-payments",
              "stripe",
              "worldpay",
              "till",
              "tillTerminal",
              "pin",
              "braintree",
              "cash"
            ]
          },
          "manualOrder": { "type": "boolean" },
          "tipFees": { "type": "boolean" },
          "clientDonation": {
            "type": "number",
            "format": "double",
            "example": 5
          },
          "notes": { "type": "string", "example": "Example note" },
          "organiserMailListOptIn": { "type": "boolean" },
          "incompleteAt": { "$ref": "#/components/schemas/Date" },
          "completedAt": { "$ref": "#/components/schemas/Date" },
          "waitlistOfferId": {
            "type": "string",
            "example": "5d0ae7ef9d3e67012780u70d"
          },
          "isInternationalTransaction": { "type": "boolean" },
          "totals": { "$ref": "#/components/schemas/OrderTotals" },
          "purchaseTotals": { "$ref": "#/components/schemas/OrderTotals" },
          "additionalFields": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdditionalFields" }
          },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "location": { "$ref": "#/components/schemas/Location" },
          "createdAt": { "$ref": "#/components/schemas/Date" },
          "updatedAt": { "$ref": "#/components/schemas/Date" }
        }
      },
      "Ticket": {
        "type": "object",
        "required": [
          "_id",
          "eventId",
          "orderId",
          "orderName",
          "currency",
          "eventDateId",
          "ticketTypeName",
          "ticketTypeId",
          "discount",
          "netPrice",
          "taxes",
          "fee",
          "status",
          "salesChannel",
          "qrCodeData",
          "location",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": { "$ref": "#/components/schemas/TicketId" },
          "eventId": { "$ref": "#/components/schemas/EventId" },
          "orderId": { "$ref": "#/components/schemas/OrderId" },
          "orderName": { "$ref": "#/components/schemas/OrderName" },
          "currency": { "$ref": "#/components/schemas/Currency" },
          "number": { "type": "integer", "example": 1 },
          "firstName": { "$ref": "#/components/schemas/FirstName" },
          "lastName": { "$ref": "#/components/schemas/LastName" },
          "organisation": { "type": "string", "example": "Free Peoples" },
          "eventDateId": { "$ref": "#/components/schemas/EventDateId" },
          "ticketTypeName": { "$ref": "#/components/schemas/TicketTypeName" },
          "ticketTypeId": { "$ref": "#/components/schemas/TicketTypeId" },
          "accessCode": { "$ref": "#/components/schemas/AccessCode" },
          "price": { "type": "number", "format": "double", "example": 37.5 },
          "discount": { "type": "number", "format": "double", "example": 0 },
          "netPrice": { "type": "number", "format": "double", "example": 37.5 },
          "taxes": { "type": "number", "format": "double", "example": 3.41 },
          "fee": { "type": "number", "format": "double", "example": 2.49 },
          "passedOnFee": { "type": "number", "format": "double", "example": 0 },
          "absorbedFee": { "type": "number", "format": "double", "example": 0 },
          "dgrDonation": { "type": "number", "format": "double", "example": 0 },
          "total": { "type": "number", "format": "double", "example": 39.99 },
          "customScanningCode": {
            "type": "string",
            "example": "29002208237292"
          },
          "seatingLocation": {
            "type": "object",
            "properties": {
              "seatingMapId": {
                "type": "string",
                "example": "5b4d44e0d76d957e9c672907"
              },
              "name": {
                "type": "string",
                "example": "Section C Table 49 Seat 10"
              },
              "section": { "$ref": "#/components/schemas/SeatingLocationId" },
              "table": { "$ref": "#/components/schemas/SeatingLocationId" },
              "seat": { "$ref": "#/components/schemas/SeatingLocationId" },
              "note": { "type": "string", "example": "Door 2" }
            }
          },
          "status": { "type": "string", "enum": ["complete", "cancelled"] },
          "additionalFields": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdditionalFields" }
          },
          "checkIn": { "$ref": "#/components/schemas/CheckIn" },
          "checkInHistory": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CheckIn" }
          },
          "cancelledAt": { "$ref": "#/components/schemas/Date" },
          "isDonation": { "type": "boolean" },
          "packageId": {
            "type": "string",
            "example": "5b7364d43bed06000f634bf9"
          },
          "packageName": { "type": "string", "example": "Family" },
          "packageGroupId": {
            "type": "string",
            "example": "5b73675b55aa47000fbdc354"
          },
          "packagePrice": { "type": "number", "example": 120 },
          "attendeeProfileId": {
            "type": "string",
            "example": "5d8d5dbfe40885ede10922d4"
          },
          "swappedFrom": { "$ref": "#/components/schemas/TicketSwap" },
          "swappedTo": { "$ref": "#/components/schemas/TicketSwap" },
          "salesChannel": { "$ref": "#/components/schemas/SalesChannel" },
          "qrCodeData": { "$ref": "#/components/schemas/QrCodeData" },
          "discounts": { "$ref": "#/components/schemas/Discounts" },
          "location": { "$ref": "#/components/schemas/Location" },
          "createdAt": { "$ref": "#/components/schemas/Date" },
          "updatedAt": { "$ref": "#/components/schemas/Date" }
        }
      },
      "SharedEventRequestForCreateAndWrite": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lord of the Rings",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "example": "A quest to destroy a powerful ring and defeat a dark lord"
          },
          "timezone": { "$ref": "#/components/schemas/Timezone" },
          "eventLocation": {
            "$ref": "#/components/schemas/CreateUpdateEventLocation"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string",
              "example": ["lord", "of", "the", "rings"],
              "minLength": 1,
              "maxLength": 25
            },
            "maxItems": 10,
            "uniqueItems": true
          },
          "classification": {
            "$ref": "#/components/schemas/EventClassification"
          }
        }
      },
      "CreateEventRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SharedEventRequestForCreateAndWrite"
          },
          {
            "type": "object",
            "required": ["name", "dates", "timezone"],
            "properties": {
              "dates": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/CreateDateRange" },
                "minItems": 1,
                "maxItems": 700
              }
            }
          }
        ]
      },
      "UpdateEventRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SharedEventRequestForCreateAndWrite"
          },
          {
            "type": "object",
            "properties": {
              "dates": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/DateOperation" },
                "minItems": 1,
                "maxItems": 700
              },
              "location": { "$ref": "#/components/schemas/Location" }
            }
          }
        ]
      },
      "CreateDateRange": {
        "type": "object",
        "required": ["startDate", "endDate"],
        "properties": {
          "startDate": { "$ref": "#/components/schemas/Date" },
          "endDate": { "$ref": "#/components/schemas/Date" }
        }
      },
      "DateOperation": {
        "oneOf": [
          { "$ref": "#/components/schemas/CreateDateOperation" },
          { "$ref": "#/components/schemas/UpdateDateOperation" },
          { "$ref": "#/components/schemas/DeleteDateOperation" }
        ]
      },
      "CreateDateOperation": {
        "type": "object",
        "properties": {
          "startDate": { "$ref": "#/components/schemas/Date" },
          "endDate": { "$ref": "#/components/schemas/Date" },
          "operation": { "type": "string", "enum": ["CREATE"] }
        },
        "required": ["startDate", "endDate", "operation"]
      },
      "UpdateDateOperation": {
        "type": "object",
        "properties": {
          "_id": { "$ref": "#/components/schemas/DateRangeId" },
          "startDate": { "$ref": "#/components/schemas/Date" },
          "endDate": { "$ref": "#/components/schemas/Date" },
          "operation": { "type": "string", "enum": ["UPDATE"] }
        },
        "required": ["_id", "startDate", "endDate", "operation"]
      },
      "DeleteDateOperation": {
        "type": "object",
        "properties": {
          "_id": { "$ref": "#/components/schemas/DateRangeId" },
          "operation": { "type": "string", "enum": ["DELETE"] }
        },
        "required": ["_id", "operation"]
      },
      "CreateUpdateEventLocation": {
        "type": "object",
        "oneOf": [
          { "$ref": "#/components/schemas/CreateOnlineEventLocation" },
          { "$ref": "#/components/schemas/CreateAddressEventLocation" },
          { "$ref": "#/components/schemas/CreateCustomEventLocation" },
          { "$ref": "#/components/schemas/CreateToBeAnnouncedEventLocation" }
        ],
        "discriminator": { "propertyName": "type" }
      },
      "CreateToBeAnnouncedEventLocation": {
        "type": "object",
        "additionalProperties": false,
        "required": ["type"],
        "properties": {
          "type": { "type": "string", "enum": ["toBeAnnounced"] }
        }
      },
      "CreateOnlineEventLocation": {
        "type": "object",
        "additionalProperties": false,
        "required": ["type"],
        "properties": {
          "type": { "type": "string", "enum": ["online"] },
          "onlineUrl": {
            "type": "string",
            "example": "www.zoom.com/hobbit-dance-off"
          },
          "instructions": {
            "type": "string",
            "example": "Take the guided tour departing from The Shires rest, 15 minutes from Matamata town centre by car."
          }
        }
      },
      "CreateAddressEventLocation": {
        "type": "object",
        "additionalProperties": false,
        "required": ["type", "address", "venueName", "latLng"],
        "properties": {
          "type": { "type": "string", "enum": ["address"] },
          "address": {
            "type": "string",
            "example": "501 Buckland Road, Hinuera, Matamata 3472, New Zealand"
          },
          "venueName": { "type": "string", "example": "" },
          "latLng": {
            "type": "array",
            "items": { "type": "number" },
            "example": [-37.8691623, 175.6802895],
            "minItems": 2,
            "maxItems": 2
          },
          "placeId": {
            "type": "string",
            "example": "ChIJP0sTGs-uMioR7xB_WgdR9Bo",
            "description": "See https://developers.google.com/maps/documentation/places/web-service/details#Place-place_id"
          },
          "addressComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateGoogleAddressComponents"
            }
          }
        }
      },
      "CreateCustomEventLocation": {
        "type": "object",
        "additionalProperties": false,
        "required": ["type", "address", "venueName"],
        "properties": {
          "type": { "type": "string", "enum": ["custom"] },
          "address": {
            "type": "string",
            "example": "501 Buckland Road, Hinuera, Matamata 3472, New Zealand",
            "minLength": 1
          },
          "venueName": {
            "type": "string",
            "example": "Hobbiton Movie Set Tours",
            "minLength": 1
          }
        }
      },
      "CreateGoogleAddressComponents": {
        "type": "object",
        "additionalProperties": false,
        "description": "See https://developers.google.com/maps/documentation/places/web-service/details#AddressComponent",
        "properties": {
          "long_name": { "type": "string" },
          "short_name": { "type": "string" },
          "types": { "type": "array", "items": { "type": "string" } }
        }
      },
      "TransferTicketRequest": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "mobile"],
        "properties": {
          "firstName": { "$ref": "#/components/schemas/FirstName" },
          "lastName": { "$ref": "#/components/schemas/LastName" },
          "email": { "$ref": "#/components/schemas/Email" },
          "mobile": { "$ref": "#/components/schemas/Mobile" }
        }
      },
      "TransferTicketResult": {
        "allOf": [
          { "$ref": "#/components/schemas/Ticket" },
          {
            "type": "object",
            "required": [
              "orderHasUnansweredRequiredQuestions",
              "orderEditLink"
            ],
            "properties": {
              "orderHasUnansweredRequiredQuestions": {
                "type": "boolean",
                "description": "Describes whether the order has any unanswered required questions after swapping. Use 'orderEditLink' to answer these questions."
              },
              "orderEditLink": {
                "type": "string",
                "description": "The URL where the order this ticket is part of can be edited. Use this to answer any unanswered required questions (use the 'orderHasUnansweredRequiredQuestions' field to know if there are any).",
                "example": "https://events.humanitix.net/public/edit-order/603a26fa7305b6000ba2d020/307d1a70a98fc6005ab4fde3?token=jwtToken"
              }
            }
          }
        ]
      },
      "Tag": {
        "type": "object",
        "required": ["_id", "name", "userId", "location"],
        "properties": {
          "_id": { "$ref": "#/components/schemas/TagId" },
          "name": {
            "type": "string",
            "description": "The name of the tag.",
            "example": "People & Culture"
          },
          "userId": {
            "type": "string",
            "description": "The userId of the user that this tag belongs to.",
            "example": "uSgT2laduVWphGdUGJ1pd9G5NqG2"
          },
          "location": { "$ref": "#/components/schemas/Location" },
          "createdAt": { "$ref": "#/components/schemas/Date" },
          "updatedAt": { "$ref": "#/components/schemas/Date" }
        }
      },
      "CheckInCountResult": {
        "type": "object",
        "required": ["eventId", "eventDateId", "checkedIn", "ticketTypes"],
        "properties": {
          "eventId": { "$ref": "#/components/schemas/EventId" },
          "eventDateId": { "$ref": "#/components/schemas/EventDateId" },
          "checkedIn": {
            "type": "integer",
            "description": "The number of check ins across all ticket types.",
            "example": 732
          },
          "ticketTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["ticketTypeId", "ticketTypeName", "checkedIn"],
              "properties": {
                "ticketTypeId": { "$ref": "#/components/schemas/TicketTypeId" },
                "ticketTypeName": {
                  "$ref": "#/components/schemas/TicketTypeName"
                },
                "checkedIn": { "type": "integer", "example": 732 }
              }
            }
          }
        }
      },
      "Error": {
        "required": ["statusCode", "error", "message"],
        "properties": {
          "statusCode": { "type": "integer" },
          "error": { "type": "string" },
          "message": { "type": "string" }
        }
      },
      "BadRequestError": {
        "allOf": [
          { "$ref": "#/components/schemas/Error" },
          {
            "type": "object",
            "properties": {
              "statusCode": { "example": 400 },
              "error": { "example": "Bad Request" },
              "message": {
                "example": "query should have required property 'page'"
              }
            }
          }
        ]
      },
      "UnauthorizedError": {
        "allOf": [
          { "$ref": "#/components/schemas/Error" },
          {
            "type": "object",
            "properties": {
              "statusCode": { "example": 401 },
              "error": { "example": "Unauthorized" },
              "message": { "example": "Invalid API Key." }
            }
          }
        ]
      },
      "ForbiddenError": {
        "allOf": [
          { "$ref": "#/components/schemas/Error" },
          {
            "type": "object",
            "properties": {
              "statusCode": { "example": 403 },
              "error": { "example": "Forbidden" },
              "message": {
                "example": "User: uSgT1ladrVWphGdUGJ1pd9G5NqG2 does not have permission to transfer tickets."
              }
            }
          }
        ]
      },
      "NotFoundError": {
        "allOf": [
          { "$ref": "#/components/schemas/Error" },
          {
            "type": "object",
            "properties": {
              "statusCode": { "example": 404 },
              "error": { "example": "Not Found" },
              "message": {
                "example": "Event with id: 5ac5a094d8fe7c0c0f212fe2 not found."
              }
            }
          }
        ]
      },
      "UnprocessableEntityError": {
        "allOf": [
          { "$ref": "#/components/schemas/Error" },
          {
            "type": "object",
            "properties": {
              "statusCode": { "example": 422 },
              "error": { "example": "Unprocessable Entity" },
              "message": {
                "example": "Ticket with id: 5ac5c6090a8084000f27f15d has invalid status: cancelled, must be status: completed."
              }
            }
          }
        ]
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "allOf": [
          { "$ref": "#/components/schemas/Error" },
          {
            "type": "object",
            "properties": {
              "statusCode": { "example": 500 },
              "error": { "example": "Internal Server Error" },
              "message": { "example": "Something went wrong." }
            }
          }
        ]
      },
      "UserId": { "type": "string", "example": "nEOqx8s9UueyRu48789C0sY9set1" },
      "EventId": { "type": "string", "example": "5ac598ccd8fe7c0c0f212e2a" },
      "OrderId": { "type": "string", "example": "5ac599d1a488620e6cd01d87" },
      "TicketId": { "type": "string", "example": "5da50970ec90824b5ca3608f" },
      "TagId": { "type": "string", "example": "5d806e987b0ffa3b26a8fc2b" },
      "EventDateId": {
        "type": "string",
        "example": "5ac598ccd8fe7c0c0f212e2f"
      },
      "OrganiserId": {
        "type": "string",
        "example": "5ac597aed8fe7c0c0f212e27"
      },
      "DateRangeId": {
        "type": "string",
        "example": "5c9c25e08965939104239aab"
      },
      "TicketTypeId": {
        "type": "string",
        "example": "5da50970ec90824b5ca3608f"
      },
      "PackagedTicketsId": {
        "type": "string",
        "example": "5da50970ec90824b5ca3608f"
      },
      "TicketTypeName": { "type": "string", "example": "General Admission" },
      "OrderName": { "type": "string", "example": "0064YQ47" },
      "AdditionalQuestionId": {
        "type": "string",
        "example": "5ac5c5e85aec29000ff064f4"
      },
      "AdditionalQuestions": {
        "type": "object",
        "required": ["_id", "question", "required", "perOrder"],
        "properties": {
          "_id": { "$ref": "#/components/schemas/AdditionalQuestionId" },
          "inputType": {
            "type": "string",
            "enum": ["text", "number", "email", "url", "date", "file"]
          },
          "question": { "type": "string" },
          "required": { "type": "boolean" },
          "description": { "type": "string" },
          "perOrder": { "type": "boolean" },
          "disabled": { "type": "boolean" },
          "createdAt": { "$ref": "#/components/schemas/Date" },
          "updatedAt": { "$ref": "#/components/schemas/Date" }
        }
      },
      "AdditionalFields": {
        "type": "object",
        "required": ["questionId", "value"],
        "properties": {
          "questionId": { "$ref": "#/components/schemas/AdditionalQuestionId" },
          "value": { "type": "string", "example": "Gluten Free" },
          "details": {
            "type": "object",
            "properties": {
              "street": { "type": "string", "example": "501 Buckland Road" },
              "suburb": { "type": "string", "example": "Hinuera" },
              "postalCode": { "type": "string", "example": "3472" },
              "city": { "type": "string", "example": "Matamata" },
              "state": { "type": "string", "example": "Waikato" },
              "country": { "type": "string", "example": "New Zealand" }
            }
          }
        }
      },
      "PackagedTickets": {
        "type": "object",
        "properties": {
          "_id": { "$ref": "#/components/schemas/PackagedTicketsId" },
          "name": { "type": "string", "example": "Family ticket" },
          "price": { "type": "number", "example": 120 },
          "quantity": { "type": "integer", "example": 125 },
          "description": {
            "type": "string",
            "example": "Includes 2x Adult ticket and 2x Child ticket"
          },
          "disabled": { "type": "boolean" },
          "deleted": { "type": "boolean" },
          "tickets": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["ticketTypeId", "quantity"],
              "properties": {
                "ticketTypeId": { "$ref": "#/components/schemas/TicketTypeId" },
                "quantity": { "type": "integer", "example": 2 }
              }
            }
          }
        }
      },
      "Type": {
        "type": "string",
        "enum": [
          "appearanceOrSigning",
          "attraction",
          "campTripOrRetreat",
          "classTrainingOrWorkshop",
          "concertOrPerformance",
          "conference",
          "convention",
          "dinnerOrGala",
          "festivalOrFair",
          "gameOrCompetition",
          "meetingOrNetworkingEvent",
          "partyOrSocialGathering",
          "raceOrEnduranceEvent",
          "rally",
          "screening",
          "seminarOrTalk",
          "tour",
          "tournament",
          "tradeShowConsumerShowOrExpo",
          "other"
        ],
        "example": "festivalOrFair"
      },
      "Category": {
        "type": "string",
        "enum": [
          "autoBoatAndAir",
          "businessAndProfessional",
          "charityAndCauses",
          "communityAndCulture",
          "familyAndEducation",
          "fashionAndBeauty",
          "filmMediaAndEntertainment",
          "foodAndDrink",
          "governmentAndPolitics",
          "healthAndWellness",
          "hobbiesAndSpecialInterest",
          "homeAndLifestyle",
          "music",
          "performingAndVisualArts",
          "religionAndSpirituality",
          "schoolActivities",
          "scienceAndTechnology",
          "seasonalAndHoliday",
          "sportsAndFitness",
          "travelAndOutdoor",
          "other"
        ],
        "example": "music"
      },
      "Subcategory": {
        "type": "string",
        "enum": [
          "air",
          "auto",
          "boat",
          "motorcycle",
          "other",
          "career",
          "design",
          "educators",
          "environmentAndSustainability",
          "finance",
          "investment",
          "media",
          "nonProfitNGO",
          "realEstate",
          "salesAndMarketing",
          "startupsAndBusiness",
          "animalWelfare",
          "disasterRelief",
          "education",
          "environment",
          "healthcare",
          "humanRights",
          "internationalAid",
          "poverty",
          "cityTown",
          "county",
          "heritage",
          "historic",
          "lgbt",
          "language",
          "medieval",
          "nationality",
          "renaissance",
          "state",
          "alumni",
          "baby",
          "childrenAndYouth",
          "parenting",
          "parentsAssociation",
          "reunion",
          "seniorCitizen",
          "accessories",
          "beauty",
          "bridal",
          "fashion",
          "adult",
          "anime",
          "comedy",
          "comics",
          "film",
          "gaming",
          "tv",
          "beer",
          "food",
          "spirits",
          "wine",
          "countyMunicipalGovernment",
          "democraticParty",
          "federalGovernment",
          "internationalAffairs",
          "military",
          "nationalSecurity",
          "nonPartisan",
          "otherParty",
          "republicanParty",
          "stateGovernment",
          "medical",
          "mentalHealth",
          "personalHealth",
          "spa",
          "yoga",
          "animeComics",
          "books",
          "diy",
          "drawingAndPainting",
          "knitting",
          "photography",
          "dating",
          "homeAndGarden",
          "petsAndAnimals",
          "acoustic",
          "alternative",
          "americana",
          "bluegrass",
          "blues",
          "bluesAndJazz",
          "classical",
          "country",
          "cultural",
          "djDance",
          "edm",
          "edmElectronic",
          "electronic",
          "experimental",
          "folk",
          "hipHopRap",
          "indie",
          "jazz",
          "latin",
          "metal",
          "opera",
          "pop",
          "psychedelic",
          "punkHardcore",
          "rAndB",
          "reggae",
          "religiousSpiritual",
          "rock",
          "singerSongwriter",
          "top40",
          "world",
          "ballet",
          "craft",
          "fineArt",
          "jewelry",
          "literaryArts",
          "musical",
          "orchestra",
          "painting",
          "sculpture",
          "theatre",
          "agnosticism",
          "atheism",
          "buddhism",
          "christianity",
          "easternReligion",
          "folkReligions",
          "hinduism",
          "islam",
          "judaism",
          "mormonism",
          "mysticismAndOccult",
          "newAge",
          "shintoism",
          "sikhism",
          "unaffiliated",
          "afterSchoolCare",
          "dinner",
          "fundRaiser",
          "parking",
          "publicSpeaker",
          "raffle",
          "biotech",
          "highTech",
          "medicine",
          "mobile",
          "robotics",
          "science",
          "socialMedia",
          "autumnEvents",
          "christmas",
          "easter",
          "halloweenHaunt",
          "hanukkah",
          "independenceDay",
          "newYearsEve",
          "stPatricksDay",
          "thanksgiving",
          "americanFootball",
          "baseball",
          "basketball",
          "camps",
          "cheer",
          "cycling",
          "exercise",
          "fightingMartialArts",
          "football",
          "golf",
          "hockey",
          "lacrosse",
          "motorsports",
          "mountainBiking",
          "obstacles",
          "rugby",
          "running",
          "snowSports",
          "softball",
          "swimmingWaterSports",
          "tennis",
          "trackField",
          "volleyball",
          "walking",
          "weightlifting",
          "wrestling",
          "canoeing",
          "climbing",
          "hiking",
          "kayaking",
          "rafting",
          "travel"
        ],
        "example": "electronic"
      },
      "CategoryAutoBoatAndAir": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["autoBoatAndAir"] },
          "subcategory": {
            "type": "string",
            "enum": ["air", "auto", "boat", "motorcycle", "other"]
          }
        }
      },
      "CategoryBusinessAndProfessional": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["businessAndProfessional"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "career",
              "design",
              "educators",
              "environmentAndSustainability",
              "finance",
              "investment",
              "media",
              "nonProfitNGO",
              "realEstate",
              "salesAndMarketing",
              "startupsAndBusiness",
              "other"
            ]
          }
        }
      },
      "CategoryCharityAndCauses": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["charityAndCauses"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "animalWelfare",
              "disasterRelief",
              "education",
              "environment",
              "healthcare",
              "humanRights",
              "internationalAid",
              "poverty",
              "other"
            ]
          }
        }
      },
      "CategoryCommunityAndCulture": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["communityAndCulture"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "cityTown",
              "county",
              "heritage",
              "historic",
              "lgbt",
              "language",
              "medieval",
              "nationality",
              "renaissance",
              "state",
              "other"
            ]
          }
        }
      },
      "CategoryFamilyAndEducation": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["familyAndEducation"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "alumni",
              "baby",
              "childrenAndYouth",
              "education",
              "parenting",
              "parentsAssociation",
              "reunion",
              "seniorCitizen",
              "other"
            ]
          }
        }
      },
      "CategoryFashionAndBeauty": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["fashionAndBeauty"] },
          "subcategory": {
            "type": "string",
            "enum": ["accessories", "beauty", "bridal", "fashion", "other"]
          }
        }
      },
      "CategoryFilmMediaAndEntertainment": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": ["filmMediaAndEntertainment"]
          },
          "subcategory": {
            "type": "string",
            "enum": [
              "adult",
              "anime",
              "comedy",
              "comics",
              "film",
              "gaming",
              "tv",
              "other"
            ]
          }
        }
      },
      "CategoryFoodAndDrink": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["foodAndDrink"] },
          "subcategory": {
            "type": "string",
            "enum": ["beer", "food", "spirits", "wine", "other"]
          }
        }
      },
      "CategoryGovernmentAndPolitics": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["governmentAndPolitics"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "countyMunicipalGovernment",
              "democraticParty",
              "federalGovernment",
              "internationalAffairs",
              "military",
              "nationalSecurity",
              "nonPartisan",
              "otherParty",
              "republicanParty",
              "stateGovernment",
              "other"
            ]
          }
        }
      },
      "CategoryHealthAndWellness": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["healthAndWellness"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "medical",
              "mentalHealth",
              "personalHealth",
              "spa",
              "yoga",
              "other"
            ]
          }
        }
      },
      "CategoryHobbiesAndSpecialInterest": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": ["hobbiesAndSpecialInterest"]
          },
          "subcategory": {
            "type": "string",
            "enum": [
              "adult",
              "animeComics",
              "books",
              "diy",
              "drawingAndPainting",
              "gaming",
              "knitting",
              "photography",
              "other"
            ]
          }
        }
      },
      "CategoryHomeAndLifestyle": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["homeAndLifestyle"] },
          "subcategory": {
            "type": "string",
            "enum": ["dating", "homeAndGarden", "petsAndAnimals", "other"]
          }
        }
      },
      "CategoryMusic": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["music"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "alternative",
              "americana",
              "bluegrass",
              "blues",
              "bluesAndJazz",
              "classical",
              "country",
              "cultural",
              "djDance",
              "edm",
              "edmElectronic",
              "electronic",
              "experimental",
              "folk",
              "hipHopRap",
              "indie",
              "jazz",
              "latin",
              "metal",
              "opera",
              "pop",
              "psychedelic",
              "punkHardcore",
              "rAndB",
              "reggae",
              "religiousSpiritual",
              "rock",
              "singerSongwriter",
              "top40",
              "world",
              "other"
            ]
          }
        }
      },
      "CategoryPerformingAndVisualArts": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["performingAndVisualArts"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "ballet",
              "comedy",
              "craft",
              "dance",
              "design",
              "fineArt",
              "jewelry",
              "literaryArts",
              "musical",
              "opera",
              "orchestra",
              "painting",
              "sculpture",
              "theatre",
              "other"
            ]
          }
        }
      },
      "CategoryReligionAndSpirituality": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["religionAndSpirituality"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "agnosticism",
              "atheism",
              "buddhism",
              "christianity",
              "easternReligion",
              "folkReligions",
              "hinduism",
              "islam",
              "judaism",
              "mormonism",
              "mysticismAndOccult",
              "newAge",
              "shintoism",
              "sikhism",
              "unaffiliated",
              "other"
            ]
          }
        }
      },
      "CategorySchoolActivities": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["schoolActivities"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "afterSchoolCare",
              "dinner",
              "fundRaiser",
              "parking",
              "publicSpeaker",
              "raffle",
              "other"
            ]
          }
        }
      },
      "CategoryScienceAndTechnology": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["scienceAndTechnology"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "biotech",
              "highTech",
              "medicine",
              "mobile",
              "robotics",
              "science",
              "socialMedia",
              "other"
            ]
          }
        }
      },
      "CategorySeasonalAndHoliday": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["seasonalAndHoliday"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "autumnEvents",
              "christmas",
              "easter",
              "halloweenHaunt",
              "hanukkah",
              "independenceDay",
              "newYearsEve",
              "stPatricksDay",
              "thanksgiving",
              "other"
            ]
          }
        }
      },
      "CategorySportsAndFitness": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["sportsAndFitness"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "americanFootball",
              "baseball",
              "basketball",
              "camps",
              "cheer",
              "cycling",
              "exercise",
              "fightingMartialArts",
              "football",
              "golf",
              "hockey",
              "lacrosse",
              "motorsports",
              "mountainBiking",
              "obstacles",
              "rugby",
              "running",
              "snowSports",
              "softball",
              "swimmingWaterSports",
              "tennis",
              "trackField",
              "volleyball",
              "walking",
              "weightlifting",
              "wrestling",
              "yoga",
              "other"
            ]
          }
        }
      },
      "CategoryTravelAndOutdoor": {
        "type": "object",
        "properties": {
          "category": { "type": "string", "enum": ["travelAndOutdoor"] },
          "subcategory": {
            "type": "string",
            "enum": [
              "canoeing",
              "climbing",
              "hiking",
              "kayaking",
              "rafting",
              "travel",
              "other"
            ]
          }
        }
      },
      "CategoryOther": {
        "type": "object",
        "properties": { "category": { "type": "string", "enum": ["other"] } }
      },
      "EventClassification": {
        "type": "object",
        "properties": { "type": { "$ref": "#/components/schemas/Type" } },
        "oneOf": [
          { "$ref": "#/components/schemas/CategoryAutoBoatAndAir" },
          { "$ref": "#/components/schemas/CategoryBusinessAndProfessional" },
          { "$ref": "#/components/schemas/CategoryCharityAndCauses" },
          { "$ref": "#/components/schemas/CategoryCommunityAndCulture" },
          { "$ref": "#/components/schemas/CategoryFamilyAndEducation" },
          { "$ref": "#/components/schemas/CategoryFashionAndBeauty" },
          { "$ref": "#/components/schemas/CategoryFilmMediaAndEntertainment" },
          { "$ref": "#/components/schemas/CategoryFoodAndDrink" },
          { "$ref": "#/components/schemas/CategoryGovernmentAndPolitics" },
          { "$ref": "#/components/schemas/CategoryHealthAndWellness" },
          { "$ref": "#/components/schemas/CategoryHobbiesAndSpecialInterest" },
          { "$ref": "#/components/schemas/CategoryHomeAndLifestyle" },
          { "$ref": "#/components/schemas/CategoryMusic" },
          { "$ref": "#/components/schemas/CategoryPerformingAndVisualArts" },
          { "$ref": "#/components/schemas/CategoryReligionAndSpirituality" },
          { "$ref": "#/components/schemas/CategorySchoolActivities" },
          { "$ref": "#/components/schemas/CategoryScienceAndTechnology" },
          { "$ref": "#/components/schemas/CategorySeasonalAndHoliday" },
          { "$ref": "#/components/schemas/CategorySportsAndFitness" },
          { "$ref": "#/components/schemas/CategoryTravelAndOutdoor" },
          { "$ref": "#/components/schemas/CategoryOther" }
        ]
      },
      "Accessibility": {
        "type": "object",
        "properties": {
          "contactName": { "type": "string", "example": "Gandalf The Grey" },
          "contactNumber": { "type": "string", "example": "0412345678" },
          "travelInstructions": {
            "type": "string",
            "example": "The closest drop off point is The Shires Rest. The best public transport option is..."
          },
          "entryInstructions": {
            "type": "string",
            "example": "To enter the building there is..."
          },
          "afterEntryInstructions": {
            "type": "string",
            "example": "fter entering the building walk 10 meters forward than 3 meters right where you should introduce yourself to reception..."
          },
          "hazards": { "type": "string", "example": "NA" },
          "toiletLocation": {
            "type": "string",
            "example": "Disabled toilets are located on ground level of the building only."
          },
          "disabledParking": {
            "type": "string",
            "example": "5 spaces available in the Wilsons car park at 151 Example Street."
          },
          "features": { "$ref": "#/components/schemas/AccessibilityFeature" }
        }
      },
      "Artist": {
        "type": "object",
        "required": ["origin", "name"],
        "properties": {
          "origin": {
            "type": "string",
            "example": "spotify",
            "description": "External system from which the artist information originates."
          },
          "name": {
            "type": "string",
            "example": "Gandalf",
            "description": "Name of the artist."
          },
          "externalId": {
            "type": "string",
            "example": "4ZNG0WQPQ10ehIVkCnM5ku",
            "description": "Identifier used to reference the artist in the external system."
          }
        }
      },
      "AccessibilityFeature": {
        "type": "object",
        "properties": {
          "access": { "type": "boolean" },
          "wheelchairAccessibility": { "type": "boolean" },
          "audioDescription": { "type": "boolean" },
          "telephoneTypewriter": { "type": "boolean" },
          "volumeControlTelephone": { "type": "boolean" },
          "assistiveListeningSystems": { "type": "boolean" },
          "signLanguageInterpretation": { "type": "boolean" },
          "accessiblePrint": { "type": "boolean" },
          "closedCaptioning": { "type": "boolean" },
          "openedCaptioning": { "type": "boolean" },
          "brailleSymbol": { "type": "boolean" }
        }
      },
      "SeatingLocationId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "b60f3c66-78bd-4c1a-a129-a55d98cfe62f"
          }
        }
      },
      "CheckIn": {
        "type": "object",
        "required": ["checkedIn"],
        "properties": {
          "checkedIn": { "type": "boolean" },
          "date": { "$ref": "#/components/schemas/Date" },
          "userId": { "$ref": "#/components/schemas/UserId" }
        }
      },
      "TicketSwap": {
        "type": "object",
        "required": ["id", "swappedAt", "userId"],
        "properties": {
          "id": { "type": "string", "example": "5ac599d1a488620e6cd01d88" },
          "swappedAt": { "$ref": "#/components/schemas/Date" },
          "userId": { "$ref": "#/components/schemas/UserId" }
        }
      },
      "OrderTotals": {
        "type": "object",
        "required": [
          "subtotal",
          "clientDonation",
          "netClientDonation",
          "donation",
          "feesIncluded",
          "bookingTaxes",
          "taxes",
          "totalTaxes",
          "discounts",
          "refunds",
          "netSales",
          "grossSales",
          "total"
        ],
        "properties": {
          "subtotal": { "type": "number", "example": 50 },
          "amexFee": { "type": "number" },
          "zipFee": { "type": "number" },
          "humanitixFee": { "type": "number", "example": 3.98 },
          "bookingFee": { "type": "number", "example": 3.98 },
          "passedOnFee": { "type": "number" },
          "clientDonation": { "type": "number" },
          "netClientDonation": { "type": "number" },
          "donation": { "type": "number", "example": 1.19 },
          "dgrDonation": { "type": "number" },
          "giftCardCredit": { "type": "number" },
          "credit": { "type": "number" },
          "outstandingAmount": { "type": "number", "deprecated": true },
          "feesIncluded": { "type": "boolean" },
          "bookingTaxes": { "type": "number", "example": 0.36 },
          "passedOnTaxes": { "type": "number" },
          "taxes": { "type": "number", "example": 0 },
          "totalTaxes": { "type": "number", "example": 0.36 },
          "discounts": { "type": "number" },
          "refunds": { "type": "number" },
          "netSales": { "type": "number", "example": 50 },
          "grossSales": { "type": "number", "example": 53.98 },
          "referralAmount": { "type": "number" },
          "total": { "type": "number", "example": 53.98 }
        }
      },
      "TicketType": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "_id": { "$ref": "#/components/schemas/TicketTypeId" },
          "name": { "type": "string", "example": "Adult" },
          "price": { "type": "number", "example": 100 },
          "priceRange": {
            "type": "object",
            "properties": {
              "enabled": { "type": "boolean" },
              "min": { "type": "number", "example": 10 },
              "max": { "type": "number", "example": 100 }
            }
          },
          "priceOptions": {
            "type": "object",
            "properties": {
              "enabled": { "type": "boolean" },
              "options": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "value": { "type": "string", "example": "50" }
                  }
                }
              }
            }
          },
          "quantity": { "type": "integer", "example": 500 },
          "description": { "type": "string", "example": "Admits one hobbit." },
          "disabled": { "type": "boolean" },
          "deleted": { "type": "boolean" },
          "isDonation": { "type": "boolean" }
        }
      },
      "Pricing": {
        "type": "object",
        "required": ["minimumPrice", "maximumPrice"],
        "properties": {
          "minimumPrice": {
            "type": "number",
            "format": "double",
            "example": 0,
            "description": "Minimum ticket price on an event. If the event has free tickets, this will be 0."
          },
          "maximumPrice": {
            "type": "number",
            "format": "double",
            "example": 123.45,
            "description": "Maximum ticket price on an event. If the event only has free tickets, this will be 0."
          }
        }
      },
      "EventLocation": {
        "type": "object",
        "required": ["type"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["address", "online", "custom", "toBeAnnounced"]
          },
          "venueName": { "type": "string", "example": "" },
          "address": {
            "type": "string",
            "example": "501 Buckland Road, Hinuera, Matamata 3472, New Zealand"
          },
          "latLng": {
            "type": "array",
            "items": { "type": "number" },
            "example": [-37.8691623, 175.6802895]
          },
          "instructions": {
            "type": "string",
            "example": "Take the guided tour departing from The Shires rest, 15 minutes from Matamata town centre by car."
          },
          "placeId": {
            "type": "string",
            "example": "ChIJP0sTGs-uMioR7xB_WgdR9Bo"
          },
          "onlineUrl": {
            "type": "string",
            "example": "www.zoom.com/hobbit-dance-off"
          },
          "mapUrl": {
            "type": "string",
            "example": "https://cdn.filestackcontent.com/o5uJJsdJS8uH4PGcyBXx"
          },
          "city": {
            "type": "string",
            "description": "The 'locality' from the Google geocoding api",
            "example": "Sydney"
          },
          "region": {
            "type": "string",
            "description": "The 'administrative_area_level_1' from the Google geocoding api",
            "example": "NSW"
          },
          "country": {
            "type": "string",
            "description": "The 'country' from the Google geocoding api. Format is that of ISO 3166-1 alpha-2 country codes.",
            "example": "AU"
          }
        }
      },
      "PaymentOptions": {
        "type": "object",
        "properties": {
          "refundSettings": {
            "type": "object",
            "properties": {
              "refundPolicy": {
                "type": "string",
                "example": "Refunds are available 1 month prior to the event"
              },
              "customRefundPolicy": {
                "type": "string",
                "example": "In the event you are not able to attend the hobbit dance off due to unforeseen circumstances, The Shire Council needs to be advised in writing no later than 14 days prior to the event in order to receive a full refund.  If your cancellation is less than 14 days prior to the event you will be refunded the cost of the dance off less fireworks charges and a $25 administration fee. By booking you confirm that you are aware of our cancellation policy."
              }
            }
          }
        }
      },
      "Image": {
        "type": "object",
        "required": ["url"],
        "properties": {
          "url": {
            "type": "string",
            "example": "https://lh3.googleusercontent.com/proxy/IPr6keWrYy7JmdkUpFwyZB2Ev7OJg3oWLlqKlht7r5YGu2lPkEsiDUiHDkAbcrgLkh9zlPELDvQ-4Qa8F0hBYn2bjw3qlA5RvgwR-tW8ayfG1gfVrUxC6K3Oba0WR1g7cjh3D4eRQPkChlatag"
          }
        }
      },
      "DateRange": {
        "type": "object",
        "required": ["startDate", "endDate"],
        "properties": {
          "_id": { "$ref": "#/components/schemas/DateRangeId" },
          "startDate": { "$ref": "#/components/schemas/Date" },
          "endDate": { "$ref": "#/components/schemas/Date" },
          "scheduleId": {
            "type": "string",
            "example": "5fb6ceea1b2dec000ab9d367"
          },
          "disabled": { "type": "boolean" },
          "deleted": { "type": "boolean" }
        }
      },
      "FirstName": { "type": "string", "example": "Bilbo" },
      "LastName": { "type": "string", "example": "Baggins" },
      "Email": {
        "type": "string",
        "format": "email",
        "example": "bilbo.baggins@middleearth.com"
      },
      "Mobile": { "type": "string", "example": "0412345678" },
      "AccessCode": {
        "type": "string",
        "description": "The access code used on the order to reveal hidden tickets. If returned on the ticket object, this ticket was revealed by that access code.",
        "example": "EARLYACCESS"
      },
      "Discounts": {
        "type": "object",
        "properties": {
          "autoDiscount": {
            "type": "object",
            "description": "The automatic discount applied to an order or ticket.",
            "properties": {
              "discountAmount": {
                "$ref": "#/components/schemas/DiscountAmount"
              }
            }
          },
          "discountCode": {
            "type": "object",
            "description": "The object for the discount code applied onto an order or ticket to apply a discount.",
            "properties": {
              "code": { "$ref": "#/components/schemas/DiscountCode" },
              "discountAmount": {
                "$ref": "#/components/schemas/DiscountAmount"
              }
            }
          }
        }
      },
      "DiscountCode": {
        "type": "string",
        "description": "The discount code applied onto an order or ticket to apply a discount.",
        "example": "FIFTYOFF"
      },
      "DiscountAmount": {
        "type": "integer",
        "description": "The discount amount applied to an order or ticket",
        "example": 20
      },
      "Currency": {
        "type": "string",
        "enum": ["AUD", "NZD", "USD", "FJD", "CAD"]
      },
      "SalesChannel": {
        "type": "string",
        "description": "The channel through which the order or ticket was created, via an online sale or manual order.",
        "enum": ["online", "manual"]
      },
      "QrCodeData": {
        "type": "object",
        "required": ["_id", "eventId"],
        "properties": {
          "_id": { "$ref": "#/components/schemas/TicketId" },
          "eventId": { "$ref": "#/components/schemas/EventId" }
        }
      },
      "Location": {
        "type": "string",
        "description": "The location of where the object is stored. Format is that of ISO 3166-1 alpha-2 country codes.",
        "example": "AU",
        "enum": ["AU", "NZ", "US", "FJ", "CA", "GB", "SG", "DE", "MY", "MX"]
      },
      "Date": {
        "type": "string",
        "format": "date-time",
        "example": "2021-02-01T23:26:13.485Z"
      },
      "Timezone": { "type": "string", "example": "Pacific/Auckland" },
      "CheckInOutResult": {
        "type": "object",
        "required": ["scanningMessages"],
        "properties": {
          "scanningMessages": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["header", "message"],
              "properties": {
                "header": { "type": "string", "example": "Test scan message" },
                "message": {
                  "type": "string",
                  "example": "<p>My custom message</p>"
                }
              }
            }
          }
        }
      },
      "PaginationTotal": {
        "type": "integer",
        "description": "The total number of items matching your query.",
        "example": 58
      },
      "PaginationPage": {
        "type": "integer",
        "description": "Page number you wish to fetch.",
        "minimum": 1
      },
      "PaginationPageSize": {
        "type": "integer",
        "description": "Page size of the results you wish to fetch.",
        "minimum": 1,
        "maximum": 100,
        "default": 100
      },
      "PaginatedResponse": {
        "type": "object",
        "required": ["total", "page", "pageSize"],
        "properties": {
          "total": { "$ref": "#/components/schemas/PaginationTotal" },
          "page": { "$ref": "#/components/schemas/PaginationPage" },
          "pageSize": { "$ref": "#/components/schemas/PaginationPageSize" }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": { "type": "apiKey", "in": "header", "name": "x-api-key" }
    }
  }
}
