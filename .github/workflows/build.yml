name: Build and Tag Docker Image

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Extract Git tag or branch
      - name: Determine version
        id: version
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "0.0.0")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH_NAME="${{ github.head_ref }}"
          else
            BRANCH_NAME="${{ github.ref_name }}"
          fi

          if [[ "$BRANCH_NAME" == feature/* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$BRANCH_NAME" == bugfix/* ]]; then
            PATCH=$((PATCH + 1))
          fi

          NEW_TAG="$MAJOR.$MINOR.$PATCH"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            NEW_TAG="${NEW_TAG}-pr-${PR_NUMBER}"
          fi

          echo "tag=${NEW_TAG}" >> $GITHUB_ENV

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t aspa-runtime:${{ env.tag }} -f docker/aspa-runtime.dockerfile .

      # Push Docker image (only on merge)
      - name: Push Docker image
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/aspa-runtime:${{ env.tag }}

      # Create a new Git tag (only on merge)
      - name: Create Git tag
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -a "${{ env.tag }}" -m "Release ${{ env.tag }}"
          git push origin "${{ env.tag }}"